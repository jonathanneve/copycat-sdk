[
    {
        "objectName": "RPL$TMP_CHANGES",
        "objectType": "TABLE",
        "SQL": ["CREATE GLOBAL TEMPORARY TABLE RPL$TMP_CHANGES (CHANGE_NUMBER  INTEGER NOT NULL primary key) ON COMMIT DELETE ROWS"]
    },
    {
        "objectName": "RPL$TMP_VALUES",
        "objectType": "TABLE",
        "SQL":  ["CREATE GLOBAL TEMPORARY TABLE RPL$TMP_VALUES (",
                "FIELD_NAME     VARCHAR(50) NOT NULL,",
                "CHANGE_NUMBER  INTEGER NOT NULL,",
                "FIELD_TYPE     INTEGER NOT NULL,",
                "OLD_VALUE      VARCHAR(250),",
                "NEW_VALUE      VARCHAR(250),",
                "OLD_BLOB       BLOB SUB_TYPE 0 SEGMENT SIZE 80,",
                "NEW_BLOB       BLOB SUB_TYPE 0 SEGMENT SIZE 80,",
                "OLD_BLOB_NULL  CHAR(1) DEFAULT 'Y',",
                "NEW_BLOB_NULL  CHAR(1) DEFAULT 'Y',",
                "primary key (change_number, field_name)",
                ") ON COMMIT DELETE ROWS"]
    },
    {
        "objectName": "GEN_RPL$LOG",
        "objectType": "GENERATOR",
        "SQL": ["create generator GEN_RPL$LOG"]
    },
    {
        "objectName": "GEN_RPL$LOG_CHANGE_NUMBER",
        "objectType": "GENERATOR",
        "SQL": ["create generator GEN_RPL$LOG_CHANGE_NUMBER"]
    },
    {
        "objectName": "RPL$STRLEN",
        "objectType": "PROCEDURE",
        "SQL": ["create or alter procedure RPL$STRLEN (",
                "    STR varchar(2000))",
                "returns (",
                "    LEN integer)",
                "as",
                "declare variable PAT varchar(2000);",
                "BEGIN",
                "  IF (str IS NULL) THEN EXIT;",
                "  pat = '';",
                "  len = 0;",
                "  WHILE (NOT str LIKE pat) DO BEGIN",
                "    pat = pat || '_';",
                "    len = len + 1;",
                "  END",
                "  SUSPEND;",
                "END"
        ]
    },      
    {
        "objectName": "RPL$QUOTE_STR",
        "objectType": "PROCEDURE",
        "SQL": ["create or alter procedure RPL$QUOTE_STR (",
                "    CSTR varchar(1000))",
                "returns (",
                "    QUOTED_STR varchar(1000))",
                "as",
                "declare variable NSTRINGLENGTH integer;",
                "declare variable I integer;",
                "declare variable C varchar(6);",
                "begin",
                "  if (cStr is null) then",
                "    quoted_str = null;",
                "  else begin",
                "    quoted_str = '';",
                "    i = 1;",
                "    nStringLength = char_length(cStr);",
                "    while (i <= nStringLength) do",
                "    begin",
                "      c = substring(cStr from i for 1);",
                "        if (c = '''') then",
                "          c = '''''';",
                "      quoted_str = quoted_str || c;",
                "      i = i + 1;",
                "    end",
                "    quoted_str = '''' || quoted_str || '''';",
                "  end",
                "  suspend;",
                "end"]
    },
    {
        "objectName": "TR_RPL$LOG",
        "objectType": "TRIGGER",
        "SQL": ["CREATE OR ALTER TRIGGER TR_RPL$LOG FOR RPL$LOG",
                "ACTIVE AFTER DELETE POSITION 0",
                "as",
                "begin",
                "  delete from rpl$log_values where node_name = old.login and change_number = old.change_number;",
                "end"]
    },
    {
        "objectName": "RPL$FORCE_REPL",
        "objectType": "PROCEDURE",
        "SQL": [
			"CREATE PROCEDURE RPL$FORCE_REPL (config_name varchar(100), table_name varchar(50), sql_condition blob sub_type 1) returns (rows_affected integer) AS",
			"declare variable field_name varchar(50);",
			"declare variable sql blob sub_type 1;",
			"begin",
			"  select first 1 rf.rdb$field_name",
			"  from rdb$relation_fields rf",
			"  join rdb$fields f on f.rdb$field_name = rf.rdb$field_source",
			"  where f.rdb$field_type <> 261",
			"  and rf.rdb$relation_name = :table_name",
			"  order by rf.rdb$field_position into :field_name;",
			"  ",
			"  rdb$set_context('USER_TRANSACTION', 'FORCE_REPLICATION', 'TRUE');",
			"  ",
			"  sql = 'update ' || table_name || ' set ' || field_name || ' = ' || field_name || ' where ' || sql_condition;",
			"  execute statement sql;",
			"  rows_affected = row_count;",
			"  ",
			"  rdb$set_context('USER_TRANSACTION', 'FORCE_REPLICATION', '');",
			"  suspend;",
			"end"]
    }
]